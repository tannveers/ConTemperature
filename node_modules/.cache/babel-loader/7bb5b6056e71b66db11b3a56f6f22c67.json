{"ast":null,"code":"var _jsxFileName = \"/home/tanveer/Desktop/myApp/5ive_weather/src/Weather.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction Weather() {\n  const [shows, setShow] = useState({\n    location: '',\n    tempertaure: '',\n    description: ''\n  });\n\n  const data = cityId => {\n    let key = '886705b4c1182eb1c69f28eb8c520e20';\n    fetch('https://api.openweathermap.org/data/2.5/weather?id=' + cityId + '&appid=' + key).then(response => response.json()).then(data => handleState(data));\n  };\n\n  const handleState = d => {\n    let celcius = Math.round(parseFloat(d.main.temp) - 273.15);\n    setShow({ ...shows,\n      description: d.weather[0].main,\n      tempertaure: celcius,\n      location: d.name\n    });\n  };\n\n  let beautify;\n\n  if (shows.description.indexOf('rain') > 0) {\n    beautify = 'body.rainy';\n  } else if (shows.description.indexOf('cloud') > 0) {\n    beautify = 'body.cloudy';\n  } else if (shows.description.indexOf('sunny') > 0) {\n    beautify = 'body.sunny';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, data(6167865), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, shows.location), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, shows.tempertaure, \" \\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: beautify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, shows.description));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/home/tanveer/Desktop/myApp/5ive_weather/src/Weather.js"],"names":["React","useState","Weather","shows","setShow","location","tempertaure","description","data","cityId","key","fetch","then","response","json","handleState","d","celcius","Math","round","parseFloat","main","temp","weather","name","beautify","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBH,QAAQ,CAAC;AAChCI,IAAAA,QAAQ,EAAE,EADsB;AAEhCC,IAAAA,WAAW,EAAE,EAFmB;AAGhCC,IAAAA,WAAW,EAAE;AAHmB,GAAD,CAAjC;;AAMA,QAAMC,IAAI,GAAIC,MAAD,IAAY;AACvB,QAAIC,GAAG,GAAG,kCAAV;AACAC,IAAAA,KAAK,CACH,wDACEF,MADF,GAEE,SAFF,GAGEC,GAJC,CAAL,CAMGE,IANH,CAMSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANtB,EAOGF,IAPH,CAOSJ,IAAD,IAAUO,WAAW,CAACP,IAAD,CAP7B;AAQD,GAVD;;AAYA,QAAMO,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,UAAU,CAACJ,CAAC,CAACK,IAAF,CAAOC,IAAR,CAAV,GAA0B,MAArC,CAAd;AACAlB,IAAAA,OAAO,CAAC,EACN,GAAGD,KADG;AAENI,MAAAA,WAAW,EAAES,CAAC,CAACO,OAAF,CAAU,CAAV,EAAaF,IAFpB;AAGNf,MAAAA,WAAW,EAAEW,OAHP;AAINZ,MAAAA,QAAQ,EAAEW,CAAC,CAACQ;AAJN,KAAD,CAAP;AAMD,GARD;;AAUA,MAAIC,QAAJ;;AACA,MAAItB,KAAK,CAACI,WAAN,CAAkBmB,OAAlB,CAA0B,MAA1B,IAAoC,CAAxC,EAA2C;AACzCD,IAAAA,QAAQ,GAAG,YAAX;AACD,GAFD,MAEO,IAAItB,KAAK,CAACI,WAAN,CAAkBmB,OAAlB,CAA0B,OAA1B,IAAqC,CAAzC,EAA4C;AACjDD,IAAAA,QAAQ,GAAG,aAAX;AACD,GAFM,MAEA,IAAItB,KAAK,CAACI,WAAN,CAAkBmB,OAAlB,CAA0B,OAA1B,IAAqC,CAAzC,EAA4C;AACjDD,IAAAA,QAAQ,GAAG,YAAX;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,IAAI,CAAC,OAAD,CADP,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,KAAK,CAACE,QAAZ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,KAAK,CAACG,WAAZ,UAHF,eAIE;AAAK,IAAA,SAAS,EAAEmB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BtB,KAAK,CAACI,WAAjC,CAJF,CADF;AAQD;;AAED,eAAeL,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction Weather() {\n  const [shows, setShow] = useState({\n    location: '',\n    tempertaure: '',\n    description: '',\n  });\n\n  const data = (cityId) => {\n    let key = '886705b4c1182eb1c69f28eb8c520e20';\n    fetch(\n      'https://api.openweathermap.org/data/2.5/weather?id=' +\n        cityId +\n        '&appid=' +\n        key\n    )\n      .then((response) => response.json())\n      .then((data) => handleState(data));\n  };\n\n  const handleState = (d) => {\n    let celcius = Math.round(parseFloat(d.main.temp) - 273.15);\n    setShow({\n      ...shows,\n      description: d.weather[0].main,\n      tempertaure: celcius,\n      location: d.name,\n    });\n  };\n\n  let beautify;\n  if (shows.description.indexOf('rain') > 0) {\n    beautify = 'body.rainy';\n  } else if (shows.description.indexOf('cloud') > 0) {\n    beautify = 'body.cloudy';\n  } else if (shows.description.indexOf('sunny') > 0) {\n    beautify = 'body.sunny';\n  }\n\n  return (\n    <div>\n      {data(6167865)}\n      <div>{shows.location}</div>\n      <div>{shows.tempertaure} &deg;</div>\n      <div className={beautify}>{shows.description}</div>\n    </div>\n  );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}